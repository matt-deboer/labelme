#!/bin/bash
set -e

DOCKER_IMAGE="labelme.local.dev"
DISPLAY="${DISPLAY:-:0}"
NAME=${NAME:-"labelme-shell"}

if [[ -z "$(docker images | grep ${DOCKER_IMAGE})" ]]; then
    docker build -t ${DOCKER_IMAGE} -f docker/Dockerfile.dev .
fi

if [[ "$(docker ps -af "name=${NAME}" --format '{{.Names}}')" == "${NAME}" ]]; then
    docker rm -f ${NAME} &>/dev/null
fi

if ! which xhost &>/dev/null; then
    echo "xhost command is required." >&2 && exit 1;
else
    if [[ "$(uname -s)" == "Darwin" ]]; then
        #
        # see https://fredrikaverpil.github.io/2016/07/31/docker-for-mac-and-gui-applications/
        # 
        ip=$(ifconfig en0 | grep inet | awk '$1=="inet" {print $2}')
        if ! xhost + $ip; then
            echo "Please assure that XQuartz is running, and is configured to allow connections from network clients" >&2 && exit 1;
        fi
        DISPLAY="$ip:0"
    else
        #
        # see https://marcosnietoblog.wordpress.com/2017/04/30/docker-image-with-opencv-with-x11-forwarding-for-gui/
        #
        xhost +
    fi
fi

hostname=$(basename ${DOCKER_IMAGE})
DOCKER_USERNAME="$(whoami)"
DOCKER_UID=$(id -u)
DOCKER_GID=$(id -g)

docker run --rm -it \
    --name ${NAME} \
    --hostname ${hostname} \
    -v $(pwd):/labelme \
    -v /tmp/.X11-unix:/tmp/.X11-unix \
    -e DISPLAY=$DISPLAY \
    -e DOCKER_USERNAME=${DOCKER_USERNAME} \
    -e DOCKER_UID=${DOCKER_UID} \
    -e DOCKER_GID=${DOCKER_GID} \
    --entrypoint bash \
    ${DOCKER_IMAGE} \
    '-c' \
    "sudo pip3 install -v . \
    && labelme ${1}"